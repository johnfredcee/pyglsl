Import('*')
import os
import os.path
import playbox

code_dir = "."

# object files to be built for this app, by type
objects = { 'objects'     : [],
			'spu_objects' : [],
			'lua_objects' : [],
            'pch'         : []  }


# recursively walk directories, scan for .cpp files, and add static object targets to the objects list
def not_using_pch(source):
	source_name = os.path.basename(str(source))
	result = source_name in [ "memspec.cpp", "StdAfx.cpp" ]
	return result

def is_pch(source):
	source_name = os.path.basename(str(source))
	result = source_name == "StdAfx.cpp"
	return result

sources = [ source for source in playbox.scan_build_directory(".", ".cpp", env) if not(not_using_pch(source)) and not(is_pch(source)) ]
other_sources = [ source for source in playbox.scan_build_directory(".", ".cpp", env) if not_using_pch(source) and not(is_pch(source)) ]

pch = env.PCH("StdAfx.cpp", PDB=target_pdb )
objects['objects'] =  [ pch[1] ]
objects['objects'] +=  [ env.StaticObject(source, PDB=target_pdb, PCH=pch[0], PCHSTOP='StdAfx.h') for source in sources  ]
objects['objects'] += [ env.StaticObject(source, PDB=target_pdb) for source in other_sources ]

Return('objects')
